//------------------------------------------------------------------------------
// RebateDB.CS
// Author: Ethan Bartel
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

/// <summary>
/// RebateDB holds all relevant rebate information and Data
/// </summary>
public class RebateDB
{
    /// <summary>
    /// list of rebates constructed that have no rebateCheck 
    /// (to hold transactions that should recieve rebates)
    /// </summary>
    public List<Rebate> rebates = new List<Rebate>();

    /// <summary>
    /// list of rebateChecks that have been generated
    /// so they can be sent out to customers
    /// </summary>
    private List<RebateCheck> rebateChecks = new List<RebateCheck>();

    /// <summary>
    /// amount that the promotional rebate is for (ex 11%)
    /// </summary>
    private static decimal rebateAmount = (decimal).11;

    /// <summary>
    /// constructs and adds a new rebate to the list of rebates ( rebates )
    /// using the information given
    /// </summary>
    /// <param name="id">id of transaction that sent in rebate</param>
    /// <param name="name">name of customer</param>
    /// <param name="address">address of customer</param>
    public void addRebate(int id, string name, string address)
    {
        rebates.Add(new Rebate(id, name, address));
    }

    /// <summary>
    /// constructs and adds a new rebate check to the list of rebate checks (rebateChecks)
    /// using the information given
    /// </summary>
    /// <param name="total">total amount the rebate check is for</param>
    /// <param name="name">name of customer</param>
    /// <param name="address">address of customer</param>
    public void addRebateCheck(decimal total, string name, string address)
    {
        
        rebateChecks.Add(new RebateCheck(name, address, (total * rebateAmount)));
    }


}

